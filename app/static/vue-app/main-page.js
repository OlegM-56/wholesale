Vue.component('main-page', {
  template: `
<div>
  <h2 class="center-text">Тестове завдання</h2>
  <h5>Текст задачі</h5>
  <p>
    Компанія займається оптовою торгівлею. Надходження товарів відображається документом "Прибуткова накладна", продаж - "Видаткова накладна". Крім продажу товару можуть надаватися додаткові послуги, наприклад, з доставки. І послуги, і товари зазначаються в одній табличній частині.
  </p>
  <p>
    При проведенні видаткової накладної при нестачі товару необхідно видавати відповідне попередження із зазначенням кількості нестачі та не дозволяти проводити документ.
  </p>
  <p>
     Списання собівартості має бути організоване за партіями по методу FIFO.
 </p>
  <p>
    Вважається, що документи заднім числом не запроваджуються, але старі документи можуть неоперативно переводитися.
  </p>
  <p>
    Необхідно побудувати звіт про продаж товарів за період, прибутки за період та залишки товару на зазначену дату.
  </p>
  <p>
    Зробити відео де розповісти про свій шлях вирішення питання та надіслати посилання на відео на Viber: +38 067 901-63-22</p>
  <h5>Виконання задачі</h5>
  <p>
    Потрібно побудувати структуру бази даних в графічному вигляді та продемонструвати її.<br>
    На основі графічної структури бази даних, створити SQL для створення таблиць для тієї базі даних, яку бажаєте використовувати для вирішення питання. Допускаються будь-які бази даних.<br>
    Веб-рішення можна будувати на тому фреймворку, який Вам найбільш зручний для виконання цієї задачі. Але обов’язково, щоб фреймворк був з відкритим похідним кодом.<br>
    Виконану роботу потрібно продемонструвати в вигляді веб-сторінки по доступному з інтернет URL.<br>
    При виконанні завдання використовувати об’єктно-орієнтований підхід.
  </p>
  <h5>Вимоги для варіанту Python–програмістів:</h5>
  <p>
    <ul>
        <li>Мова програмування: Python.
        <li>Flask.
        <li>ORM: Alchemy.
        <li>База даних (на вибір): SQLite, MySQL, Postgresql.
        <li>Frontend (на вибір): Vue, React, або подібні рішення.
        <li>В таблицях передбачати всі можливі операції: додавання, редагування, видалення. В формах - перевірку формату введення, списки, виклик довідників.
        <li>При проектуванні бази даних відштовхуватись від принципів побудови реляційної бази даних.
        <li>Побудова звітів - будь-яким засобом (на свій вибір).
    </ul>
  </p>

</div>`,
  mounted: function() {
    store.commit('title', 'Постановка задачі')
  }
})

app.componentsLoaded('main-page')
